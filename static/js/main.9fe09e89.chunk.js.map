{"version":3,"sources":["App.js","reportWebVitals.js","Home.js","index.js"],"names":["App","props","state","name","email","message","e","preventDefault","axios","method","url","data","this","then","response","status","alert","resetForm","setState","className","id","onSubmit","handleSubmit","bind","htmlFor","class","type","value","onChange","onNameChange","required","color","aria-describedby","onEmailChange","rows","onMessageChange","event","target","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Home","href","routing","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"wRAkFeA,E,kDA9Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,QAAS,IALM,E,gDAQnB,SAAaC,GAAG,IAAD,OACbA,EAAEC,iBACFC,IAAM,CACJC,OAAQ,OACRC,IAAI,GACJC,KAAOC,KAAKV,QACXW,MAAK,SAACC,GACsB,YAAzBA,EAASH,KAAKI,QAChBC,MAAM,iBACN,EAAKC,aAC6B,SAAzBH,EAASH,KAAKI,QACvBC,MAAM,gC,uBAKZ,WACEJ,KAAKM,SAAS,M,oBAGhB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAMC,GAAG,eAAeC,SAAUT,KAAKU,aAAaC,KAAKX,MAAOH,OAAO,OAAvE,SACE,+BAEA,sBAAKU,UAAU,aAAf,UACE,wBAAOK,QAAQ,OAAf,kBAA2B,sBAAMC,MAAM,MAAZ,kBAC3B,uBACA,uBAAOC,KAAK,OAAOP,UAAU,eAAeQ,MAAOf,KAAKV,MAAMC,KAAMyB,SAAUhB,KAAKiB,aAAaN,KAAKX,MAAOkB,UAAQ,OAGtH,uBACA,sBAAKX,UAAU,aAAf,UACE,wBAAOK,QAAQ,qBAAf,2BAAkD,sBAAMO,MAAM,MAAZ,kBAClD,uBACA,uBAAOL,KAAK,QAAQP,UAAU,eAAea,mBAAiB,YAAYL,MAAOf,KAAKV,MAAME,MAAOwB,SAAUhB,KAAKqB,cAAcV,KAAKX,MAAOkB,UAAQ,OAEvJ,uBAEC,sBAAKX,UAAU,aAAf,UACE,uBAAOK,QAAQ,UAAf,qBACA,uBACA,0BAAUL,UAAU,eAAee,KAAK,IAAIP,MAAOf,KAAKV,MAAMG,QAASuB,SAAUhB,KAAKuB,gBAAgBZ,KAAKX,WAE9G,uBAEC,wBAAQc,KAAK,SAASP,UAAU,kBAAhC,6B,0BAQR,SAAaiB,GACXxB,KAAKM,SAAS,CAACf,KAAMiC,EAAMC,OAAOV,U,2BAGpC,SAAcS,GACZxB,KAAKM,SAAS,CAACd,MAAOgC,EAAMC,OAAOV,U,6BAGrC,SAAgBS,GACdxB,KAAKM,SAAS,CAACb,QAAS+B,EAAMC,OAAOV,Y,GAzEvBW,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCECO,E,4JANX,WACI,OAAO,8BACH,6BAAI,mBAAGC,KAAK,sCAAR,uD,GAHGX,IAAMC,WCMnBW,EAAU,cAAC,IAAD,UACd,gCACE,+BACA,6BACF,cAAC,IAAD,CAASC,GAAG,QAAZ,oBAEI,6BACE,cAAC,IAAD,CAASA,GAAI,OAAb,4BAKJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWL,IAC/B,cAAC,IAAD,CAAOI,KAAK,OAAOC,UAAWrD,YAIpCsD,IAASC,OAAOL,EAAQM,SAASC,eAAe,SAIhDjB,M","file":"static/js/main.9fe09e89.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './Simple.css';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    }\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url:\"\",\n      data:  this.state\n    }).then((response)=>{\n      if (response.data.status === 'success') {\n        alert(\"Message Sent.\");\n        this.resetForm()\n      } else if (response.data.status === 'fail') {\n        alert(\"Message failed to send.\")\n      }\n    })\n  }\n\n  resetForm(){\n    this.setState({})\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n          <ul>\n           \n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name <span class=\"red\">*</span></label>\n            <br></br>\n            <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} required/>\n          </div>\n         \n          <br></br>\n          <div className=\"form-group\" >\n            <label htmlFor=\"exampleInputEmail1\">Email address <span color=\"red\">*</span></label>\n            <br></br>\n            <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} required />\n          </div>\n         <br></br>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"message\" >Message</label>\n            <br></br>\n            <textarea className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)}  />\n          </div>\n         <br></br>\n          \n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          \n          </ul>\n        </form>\n      </div>\n    );\n  }\n\n  onNameChange(event) {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange(event) {\n    this.setState({email: event.target.value})\n  }\n\n  onMessageChange(event) {\n    this.setState({message: event.target.value})\n  }\n\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nclass Home extends React.Component{\r\n    render(){\r\n        return(<div>\r\n            <h1><a href=\"https://www.telusinternational.com/\">Pleasce Click Here To GO to Home!</a></h1>\r\n        </div>) \r\n    }\r\n}\r\nexport default Home","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router,Route,NavLink,Switch} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './Home';\n\nconst routing =(<Router>\n  <div>\n    <ul>\n    <li>\n  <NavLink to=\"/Home\">Home</NavLink>\n</li>\n      <li>\n        <NavLink to =\"/App\">ContactUS</NavLink>\n        \n      </li>\n\n    </ul>\n    <Switch>\n      <Route path='/Home' component={Home}></Route>\n      <Route path='/App' component={App}></Route>\n    </Switch>\n  </div>\n</Router>)\nReactDOM.render(routing,document.getElementById('root'))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}